# Generated by Django 2.0.3 on 2021-03-13 21:10

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AddToCart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(max_length=50)),
                ('qt_price', models.IntegerField(default=0)),
                ('quantity', models.IntegerField(default=1)),
                ('total_price', models.IntegerField(default=0)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=1)),
            ],
            options={
                'verbose_name': 'Add To Cart',
                'verbose_name_plural': 'Add To Carts',
            },
        ),
        migrations.CreateModel(
            name='AgriculturalAdvice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('detail', ckeditor.fields.RichTextField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to='image/')),
                ('icon_img', models.ImageField(blank=True, upload_to='icon_img/')),
                ('ordering', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Agricultural Advice',
                'verbose_name_plural': 'Agricultural Advices',
            },
        ),
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('ordering', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'News Category',
                'verbose_name_plural': 'News Categories',
            },
        ),
        migrations.CreateModel(
            name='BlogComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(blank=True, max_length=200)),
                ('email', models.CharField(blank=True, max_length=200)),
                ('comment', ckeditor.fields.RichTextField(blank=True)),
                ('comment_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Blog Comment',
                'verbose_name_plural': 'Blog Comments',
            },
        ),
        migrations.CreateModel(
            name='Blogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blog_title', models.CharField(max_length=200)),
                ('thumbnail_image', models.ImageField(blank=True, upload_to='thumbnailimage/')),
                ('blog_image', models.ImageField(blank=True, upload_to='blog/')),
                ('blog_details', ckeditor.fields.RichTextField(blank=True)),
                ('posted_By', models.CharField(blank=True, max_length=200)),
                ('ordering', models.IntegerField(default=0)),
                ('views', models.IntegerField(default=0)),
                ('post_date', models.DateField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
                ('blog_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.BlogCategory')),
            ],
            options={
                'verbose_name': 'News',
                'verbose_name_plural': 'News',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=70)),
                ('ordering', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='CompanyInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('com_name', models.CharField(blank=True, max_length=100)),
                ('company_logo', models.ImageField(blank=True, upload_to='company_logo')),
                ('staring_year', models.IntegerField(default=2020)),
                ('email1', models.CharField(blank=True, max_length=100)),
                ('email2', models.CharField(blank=True, max_length=100)),
                ('website', models.CharField(blank=True, max_length=200)),
                ('mobile1', models.CharField(blank=True, max_length=15)),
                ('mobile2', models.CharField(blank=True, max_length=15)),
                ('address', models.TextField(blank=True, max_length=200)),
                ('facebook', models.CharField(blank=True, max_length=200)),
                ('twitter', models.CharField(blank=True, max_length=200)),
                ('pinterest', models.CharField(blank=True, max_length=200)),
                ('skype', models.CharField(blank=True, max_length=200)),
                ('youtube', models.CharField(blank=True, max_length=200)),
                ('Short Description', ckeditor.fields.RichTextField(blank=True)),
                ('com_story', ckeditor.fields.RichTextField(blank=True)),
                ('story_video_link', models.TextField(blank=True)),
                ('glg_map', models.TextField(blank=True)),
                ('news', models.TextField(blank=True)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Company Info',
                'verbose_name_plural': 'Company Information',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=100)),
                ('subject', models.CharField(max_length=150)),
                ('message', ckeditor.fields.RichTextField()),
                ('message_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Agricultural experience',
                'verbose_name_plural': 'Agricultural experiences',
            },
        ),
        migrations.CreateModel(
            name='CustomarAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=30)),
                ('mobile', models.CharField(max_length=15)),
                ('email', models.CharField(blank=True, max_length=170, unique=True)),
                ('user_name', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('reg_date', models.DateTimeField(auto_now_add=True)),
                ('address', models.TextField(blank=True)),
                ('status', models.BooleanField(default=1)),
            ],
            options={
                'verbose_name': 'Customar Account',
                'verbose_name_plural': 'Customar Account',
            },
        ),
        migrations.CreateModel(
            name='CustomarOrderList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=150)),
                ('address', models.CharField(max_length=100)),
                ('price', models.IntegerField(default=0)),
                ('quantity', models.IntegerField(default=1)),
                ('order_date', models.DateField(auto_now_add=True)),
                ('delivery_date', models.DateField(blank=True, null=True)),
                ('payment_type', models.CharField(choices=[('b', 'Bkash'), ('d', 'Rocket')], max_length=1)),
                ('payment_number', models.CharField(max_length=150)),
                ('payment_txt_id', models.CharField(max_length=150)),
                ('ip_address', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.BooleanField(default=0)),
            ],
            options={
                'verbose_name': 'Order List',
                'verbose_name_plural': 'Order Lists',
            },
        ),
        migrations.CreateModel(
            name='DistrictCat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(max_length=100)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'District',
                'verbose_name_plural': 'Districts',
            },
        ),
        migrations.CreateModel(
            name='Faqs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('details', ckeditor.fields.RichTextField()),
                ('ordering', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=1)),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
            },
        ),
        migrations.CreateModel(
            name='FarmerAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('mobile', models.CharField(max_length=15, unique=True)),
                ('email', models.CharField(blank=True, max_length=170, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('reg_date', models.DateTimeField(auto_now_add=True)),
                ('address', models.TextField(blank=True)),
                ('status', models.BooleanField(default=1)),
            ],
            options={
                'verbose_name': 'Farmer Account',
                'verbose_name_plural': 'Farmer Account',
            },
        ),
        migrations.CreateModel(
            name='ImportantLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('urls', models.TextField(blank=True)),
                ('ordering', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.DistrictCat')),
            ],
            options={
                'verbose_name': 'Important Link',
                'verbose_name_plural': 'Important Links',
            },
        ),
        migrations.CreateModel(
            name='OurService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_title', models.CharField(max_length=200)),
                ('service_detail', ckeditor.fields.RichTextField(blank=True)),
                ('service_image', models.ImageField(blank=True, upload_to='service/')),
                ('ordering', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
            },
        ),
        migrations.CreateModel(
            name='OurTeamMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_name', models.CharField(max_length=50)),
                ('member_designation', models.CharField(max_length=80)),
                ('images', models.ImageField(blank=True, upload_to='team_member/')),
                ('member_mobile', models.CharField(blank=True, max_length=15)),
                ('member_email', models.CharField(blank=True, max_length=60)),
                ('facebook', models.CharField(blank=True, max_length=150)),
                ('twitter', models.CharField(blank=True, max_length=150)),
                ('linkedin', models.CharField(blank=True, max_length=150)),
                ('join_date', models.DateField(auto_now_add=True)),
                ('member_address', models.TextField(blank=True, max_length=200)),
                ('ordering', models.IntegerField(default=1)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Our Team Member',
                'verbose_name_plural': 'Our Team Members',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('thumb_image', models.ImageField(upload_to='thumb_image/')),
                ('product_image1', models.ImageField(upload_to='product_image1/')),
                ('product_image2', models.ImageField(blank=True, upload_to='product_image2/')),
                ('product_image3', models.ImageField(blank=True, upload_to='product_image3/')),
                ('quantity_for', models.CharField(choices=[('1', 'KG'), ('2', 'Number')], max_length=3)),
                ('product_price', models.IntegerField(default=0)),
                ('quantity', models.IntegerField(default=1)),
                ('total_sale', models.IntegerField(blank=True, default=0)),
                ('date', models.DateField(auto_now_add=True)),
                ('description', ckeditor.fields.RichTextField(blank=True)),
                ('approve_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.BooleanField(default=0)),
                ('new', models.BooleanField(default=0)),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.FarmerAccount')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='QuickSolve',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=100)),
                ('answer', ckeditor.fields.RichTextField()),
                ('ordering', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=1)),
            ],
            options={
                'verbose_name': 'Quick Solve',
                'verbose_name_plural': 'Quick Solves',
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_name', models.CharField(blank=True, max_length=100)),
                ('person_designation', models.CharField(blank=True, max_length=100)),
                ('person_img', models.ImageField(blank=True, upload_to='reviews_img/')),
                ('review_detail', ckeditor.fields.RichTextField(blank=True)),
                ('ordering', models.IntegerField(default=0)),
                ('review_date', models.DateField(blank=True)),
                ('status', models.BooleanField(default=0)),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
            },
        ),
        migrations.CreateModel(
            name='SliderInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slider_name', models.CharField(blank=True, max_length=100)),
                ('title', models.CharField(max_length=200)),
                ('description', ckeditor.fields.RichTextField(blank=True)),
                ('slider_images', models.ImageField(upload_to='images/slider')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('slider_order', models.IntegerField()),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Slider Image',
                'verbose_name_plural': 'Slider Images',
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_category_name', models.CharField(max_length=70)),
                ('ordering', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.Category')),
            ],
            options={
                'verbose_name': 'Sub Category',
                'verbose_name_plural': 'Sub Categories',
            },
        ),
        migrations.CreateModel(
            name='SubscriberNewslatter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscriber_email', models.EmailField(max_length=254)),
                ('subscirbe_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'News Letter',
                'verbose_name_plural': 'Subscriber News Letters',
            },
        ),
        migrations.AddField(
            model_name='ourservice',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.SubCategory'),
        ),
        migrations.AddField(
            model_name='customarorderlist',
            name='farmer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='service.FarmerAccount'),
        ),
        migrations.AddField(
            model_name='customarorderlist',
            name='product_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.Product'),
        ),
        migrations.AddField(
            model_name='blogcomment',
            name='blog',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.Blogs'),
        ),
        migrations.AddField(
            model_name='addtocart',
            name='product_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.Product'),
        ),
    ]
